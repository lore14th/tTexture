-- Project Setup -- 
[DONE] - add simple logging system
[DONE] - add basic assertion system
[DONE] - add pre-compiled headers

-- Basic Lib Features --
[DONE] - Create buffer to manage byte* memory automatically
[DONE] - Use Buffer instead of byte*
[DONE] - Read TextureCube from file (HCROSS / VCROSS)
[DONE] - Export HCROSS files as .tga [more formats later]
[DONE] - Test Reader and Exporter

	-- Clean up 0 ----------------------------
	[DONE] - Application Cleanup
		-> Application now provides a method for each operation the user is supposed to do with this library
	------------------------------------------

[DONE] - Read Texture from Equirectangular format
[DONE] - Export Equirectangular

	-- Clean up ----------------------------
	[DONE] - Consider removing GLFW dependency
		-> NO, creating a window is mandatory!

	[DONE] - Consider splitting up the Loader into multiple classes, one for each type of CubeFormat. Client should use a generic Loader
		-> YES, code will be better organized and easier to read.

	[DONE] - Consider splitting up the Exporter into multiple classes, one for each file format we want to support. Client should use a generic Exporter
		-> NO, because we ended up using stb_image_write, so we can create a function inside the exporter for every format we want to support.

	[DONE] - Refactor code to return shared_ptr
	------------------------------------------

[DONE] - Create Irradiance Map
[DONE] - Export Irradiance Map

[DONE] - Test Release Mode
------------------------

-- Advanced Lib Features --
[DONE] - Create BRDF Luts
[DONE] - Support multiple output files format (Tga, Png, Jpg)

	-- Clean up ----------------------------
	[DONE] - Sandbox clean up. All tests in one file (maybe different funtions)
	[DONE] - Remove all the useless methods in Framebuffer and Texture
	[DONE] - Clean up entry point. How to initialize the library? How the logger should work?
		-> Logger is initialized by Application
	------------------------------------------

[DONE] - Create Application and OfflineApplication based on the usage

[DONE] - Consider Exporting Prefiltered Radiance Map
[DONE] - Find a way to load Prefiltered Radiance Map

[DONE] - Timing for every single operation
[DONE] - Clean all warnings
[TODO] - documentation comments
------------------------

-- Release Features --
[DONE] - Add GUI
[TODO] - MacOS support
[TODO] - Linux support
------------------------

-- Extra Features --
[TODO] - Add multiple BRDF luts

[TODO] - Export files as VCROSS
[TODO] - Export files as Equirectangular (consider)
---------------------------
