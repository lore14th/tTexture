-- Project Setup -- 
[DONE] - add simple logging system		
[DONE] - add basic assertion system		
[DONE] - add pre-compiled headers		

-- Basic Lib Features --
[DONE] - Create buffer to manage byte* memory automatically
[DONE] - Use Buffer instead of byte*
[DONE] - Read TextureCube from file (HCROSS / VCROSS)
[DONE] - Export HCROSS files as .tga [more formats later]
[TODO] - Test Reader and Exporter

	-- Clean up 0 ----------------------------
	[TODO] - Application Cleanup
		-> Application now provides a method for each operation the user is supposed to do with this library
	------------------------------------------

[TODO] - Read Texture from Equirectangular format -> Create a simple OpenGLRenderer
[TODO] - Export Equirectangular

	-- Clean up 1 ----------------------------
	[TODO] - Consider removing GLFW dependency
		-> NO, creating a window is mandatory!

	[DONE] - Consider splitting up the Loader into multiple classes, one for each type of CubeFormat. Client should use a generic Loader
		-> YES, code will be better organized and easier to read.

	[TODO] - Consider splitting up the Exporter into multiple classes, one for each file format we want to support. Client should use a generic Exporter
		-> NO, because we ended up using stb_image_write, so we can create a function inside the exporter for every format we want to support.
	------------------------------------------

[TODO] - Create Irradiance Map
[TODO] - Export Irradiance Map


[TODO] - Export files as VCROSS
------------------------

-- Advanced Lib Features --
[TODO] - Create BRDF Luts

[TODO] - Add GUI
[TODO] - MacOS support
[TODO] - Linus support

[TODO] - Export files as Equirectangular (consider)
---------------------------
